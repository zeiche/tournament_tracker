"""Initial migration

Revision ID: 8ad9071ea833
Revises: 
Create Date: 2025-08-27 20:08:00.888601

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8ad9071ea833'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('normalized_key', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_normalized_key'), 'organizations', ['normalized_key'], unique=True)
    op.create_table('players',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('startgg_id', sa.String(), nullable=True),
    sa.Column('gamer_tag', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_players_startgg_id'), 'players', ['startgg_id'], unique=True)
    op.create_table('tournaments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('num_attendees', sa.Integer(), nullable=True),
    sa.Column('start_at', sa.Integer(), nullable=True),
    sa.Column('end_at', sa.Integer(), nullable=True),
    sa.Column('registration_closes_at', sa.Integer(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('venue_name', sa.String(), nullable=True),
    sa.Column('venue_address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('tournament_state', sa.Integer(), nullable=True),
    sa.Column('addr_state', sa.String(), nullable=True),
    sa.Column('lat', sa.String(), nullable=True),
    sa.Column('lng', sa.String(), nullable=True),
    sa.Column('owner_id', sa.String(), nullable=True),
    sa.Column('owner_name', sa.String(), nullable=True),
    sa.Column('primary_contact', sa.String(), nullable=True),
    sa.Column('primary_contact_type', sa.String(), nullable=True),
    sa.Column('normalized_contact', sa.String(), nullable=True),
    sa.Column('short_slug', sa.String(), nullable=True),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('is_registration_open', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('has_offline_events', sa.Integer(), nullable=True),
    sa.Column('has_online_events', sa.Integer(), nullable=True),
    sa.Column('tournament_type', sa.Integer(), nullable=True),
    sa.Column('sync_timestamp', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tournaments_normalized_contact'), 'tournaments', ['normalized_contact'], unique=False)
    op.create_table('attendance_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tournament_id', sa.String(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('attendance', sa.Integer(), nullable=False),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_tournament_org', 'attendance_records', ['tournament_id', 'organization_id'], unique=True)
    op.create_table('organization_contacts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('contact_value', sa.String(), nullable=False),
    sa.Column('contact_type', sa.String(), nullable=True),
    sa.Column('is_primary', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_placements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tournament_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('placement', sa.Integer(), nullable=False),
    sa.Column('prize_amount', sa.Integer(), nullable=True),
    sa.Column('event_name', sa.String(), nullable=True),
    sa.Column('event_id', sa.String(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_tournament_player_event', 'tournament_placements', ['tournament_id', 'player_id', 'event_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_tournament_player_event', table_name='tournament_placements')
    op.drop_table('tournament_placements')
    op.drop_table('organization_contacts')
    op.drop_index('ix_tournament_org', table_name='attendance_records')
    op.drop_table('attendance_records')
    op.drop_index(op.f('ix_tournaments_normalized_contact'), table_name='tournaments')
    op.drop_table('tournaments')
    op.drop_index(op.f('ix_players_startgg_id'), table_name='players')
    op.drop_table('players')
    op.drop_index(op.f('ix_organizations_normalized_key'), table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###
